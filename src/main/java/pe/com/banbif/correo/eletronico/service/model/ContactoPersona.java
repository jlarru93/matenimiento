/*
 * BanBif - API
 * API de BanBif
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package pe.com.banbif.correo.eletronico.service.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Datos de contacto de una persona
 */
@ApiModel(description = "Datos de contacto de una persona")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2019-04-02T12:18:15.278Z")
public class ContactoPersona   {
  @JsonProperty("telefonoResidencia")
  private String telefonoResidencia = null;

  @JsonProperty("telefonoTrabajo")
  private String telefonoTrabajo = null;

  @JsonProperty("celular")
  private String celular = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("direccionDomiciliaria")
  private String direccionDomiciliaria = null;

  @JsonProperty("direccionLaboral")
  private String direccionLaboral = null;

  @JsonProperty("direccionConsolidada")
  private String direccionConsolidada = null;

  @JsonProperty("direccionEstadoCuenta")
  private String direccionEstadoCuenta = null;

  @JsonProperty("direccionEntregaPlastico")
  private String direccionEntregaPlastico = null;

  @JsonProperty("territorio")
  private String territorio = null;

  public ContactoPersona telefonoResidencia(String telefonoResidencia) {
    this.telefonoResidencia = telefonoResidencia;
    return this;
  }

  /**
   * Telefono residencia
   * @return telefonoResidencia
   **/
  @JsonProperty("telefonoResidencia")
  @ApiModelProperty(value = "Telefono residencia")
  public String getTelefonoResidencia() {
    return telefonoResidencia;
  }

  public void setTelefonoResidencia(String telefonoResidencia) {
    this.telefonoResidencia = telefonoResidencia;
  }

  public ContactoPersona telefonoTrabajo(String telefonoTrabajo) {
    this.telefonoTrabajo = telefonoTrabajo;
    return this;
  }

  /**
   * Telefono trabajo
   * @return telefonoTrabajo
   **/
  @JsonProperty("telefonoTrabajo")
  @ApiModelProperty(value = "Telefono trabajo")
  public String getTelefonoTrabajo() {
    return telefonoTrabajo;
  }

  public void setTelefonoTrabajo(String telefonoTrabajo) {
    this.telefonoTrabajo = telefonoTrabajo;
  }

  public ContactoPersona celular(String celular) {
    this.celular = celular;
    return this;
  }

  /**
   * Celular
   * @return celular
   **/
  @JsonProperty("celular")
  @ApiModelProperty(value = "Celular")
  public String getCelular() {
    return celular;
  }

  public void setCelular(String celular) {
    this.celular = celular;
  }

  public ContactoPersona email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email Principal
   * @return email
   **/
  @JsonProperty("email")
  @ApiModelProperty(value = "Email Principal")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ContactoPersona direccionDomiciliaria(String direccionDomiciliaria) {
    this.direccionDomiciliaria = direccionDomiciliaria;
    return this;
  }

  /**
   * Dirección Domiciliaria
   * @return direccionDomiciliaria
   **/
  @JsonProperty("direccionDomiciliaria")
  @ApiModelProperty(value = "Dirección Domiciliaria")
  public String getDireccionDomiciliaria() {
    return direccionDomiciliaria;
  }

  public void setDireccionDomiciliaria(String direccionDomiciliaria) {
    this.direccionDomiciliaria = direccionDomiciliaria;
  }

  public ContactoPersona direccionLaboral(String direccionLaboral) {
    this.direccionLaboral = direccionLaboral;
    return this;
  }

  /**
   * Dirección Laboral
   * @return direccionLaboral
   **/
  @JsonProperty("direccionLaboral")
  @ApiModelProperty(value = "Dirección Laboral")
  public String getDireccionLaboral() {
    return direccionLaboral;
  }

  public void setDireccionLaboral(String direccionLaboral) {
    this.direccionLaboral = direccionLaboral;
  }

  public ContactoPersona direccionConsolidada(String direccionConsolidada) {
    this.direccionConsolidada = direccionConsolidada;
    return this;
  }

  /**
   * Dirección Consolidada
   * @return direccionConsolidada
   **/
  @JsonProperty("direccionConsolidada")
  @ApiModelProperty(value = "Dirección Consolidada")
  public String getDireccionConsolidada() {
    return direccionConsolidada;
  }

  public void setDireccionConsolidada(String direccionConsolidada) {
    this.direccionConsolidada = direccionConsolidada;
  }

  public ContactoPersona direccionEstadoCuenta(String direccionEstadoCuenta) {
    this.direccionEstadoCuenta = direccionEstadoCuenta;
    return this;
  }

  /**
   * Dirección Estado de Cuente
   * @return direccionEstadoCuenta
   **/
  @JsonProperty("direccionEstadoCuenta")
  @ApiModelProperty(value = "Dirección Estado de Cuente")
  public String getDireccionEstadoCuenta() {
    return direccionEstadoCuenta;
  }

  public void setDireccionEstadoCuenta(String direccionEstadoCuenta) {
    this.direccionEstadoCuenta = direccionEstadoCuenta;
  }

  public ContactoPersona direccionEntregaPlastico(String direccionEntregaPlastico) {
    this.direccionEntregaPlastico = direccionEntregaPlastico;
    return this;
  }

  /**
   * Dirección Entrega Plástico
   * @return direccionEntregaPlastico
   **/
  @JsonProperty("direccionEntregaPlastico")
  @ApiModelProperty(value = "Dirección Entrega Plástico")
  public String getDireccionEntregaPlastico() {
    return direccionEntregaPlastico;
  }

  public void setDireccionEntregaPlastico(String direccionEntregaPlastico) {
    this.direccionEntregaPlastico = direccionEntregaPlastico;
  }

  public ContactoPersona territorio(String territorio) {
    this.territorio = territorio;
    return this;
  }

  /**
   * Dirección Entrega Plástico
   * @return territorio
   **/
  @JsonProperty("territorio")
  @ApiModelProperty(value = "Dirección Entrega Plástico")
  public String getTerritorio() {
    return territorio;
  }

  public void setTerritorio(String territorio) {
    this.territorio = territorio;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactoPersona contactoPersona = (ContactoPersona) o;
    return Objects.equals(this.telefonoResidencia, contactoPersona.telefonoResidencia) &&
        Objects.equals(this.telefonoTrabajo, contactoPersona.telefonoTrabajo) &&
        Objects.equals(this.celular, contactoPersona.celular) &&
        Objects.equals(this.email, contactoPersona.email) &&
        Objects.equals(this.direccionDomiciliaria, contactoPersona.direccionDomiciliaria) &&
        Objects.equals(this.direccionLaboral, contactoPersona.direccionLaboral) &&
        Objects.equals(this.direccionConsolidada, contactoPersona.direccionConsolidada) &&
        Objects.equals(this.direccionEstadoCuenta, contactoPersona.direccionEstadoCuenta) &&
        Objects.equals(this.direccionEntregaPlastico, contactoPersona.direccionEntregaPlastico) &&
        Objects.equals(this.territorio, contactoPersona.territorio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(telefonoResidencia, telefonoTrabajo, celular, email, direccionDomiciliaria, direccionLaboral, direccionConsolidada, direccionEstadoCuenta, direccionEntregaPlastico, territorio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactoPersona {\n");
    
    sb.append("    telefonoResidencia: ").append(toIndentedString(telefonoResidencia)).append("\n");
    sb.append("    telefonoTrabajo: ").append(toIndentedString(telefonoTrabajo)).append("\n");
    sb.append("    celular: ").append(toIndentedString(celular)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    direccionDomiciliaria: ").append(toIndentedString(direccionDomiciliaria)).append("\n");
    sb.append("    direccionLaboral: ").append(toIndentedString(direccionLaboral)).append("\n");
    sb.append("    direccionConsolidada: ").append(toIndentedString(direccionConsolidada)).append("\n");
    sb.append("    direccionEstadoCuenta: ").append(toIndentedString(direccionEstadoCuenta)).append("\n");
    sb.append("    direccionEntregaPlastico: ").append(toIndentedString(direccionEntregaPlastico)).append("\n");
    sb.append("    territorio: ").append(toIndentedString(territorio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

