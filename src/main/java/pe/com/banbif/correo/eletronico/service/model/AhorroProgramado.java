/*
 * BanBif - API
 * API de BanBif
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package pe.com.banbif.correo.eletronico.service.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * AhorroProgramado
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2019-04-02T12:18:15.278Z")
public class AhorroProgramado   {
  @JsonProperty("montoPorAhorrar")
  private Double montoPorAhorrar = null;

  @JsonProperty("frecuencia")
  private TipoFrecuenciaAhorro frecuencia = null;

  @JsonProperty("envioNotificaciones")
  private Boolean envioNotificaciones = null;

  @JsonProperty("saldoPendiente")
  private Double saldoPendiente = null;

  public AhorroProgramado montoPorAhorrar(Double montoPorAhorrar) {
    this.montoPorAhorrar = montoPorAhorrar;
    return this;
  }

  /**
   * Valor programado
   * @return montoPorAhorrar
   **/
  @JsonProperty("montoPorAhorrar")
  @ApiModelProperty(value = "Valor programado")
  public Double getMontoPorAhorrar() {
    return montoPorAhorrar;
  }

  public void setMontoPorAhorrar(Double montoPorAhorrar) {
    this.montoPorAhorrar = montoPorAhorrar;
  }

  public AhorroProgramado frecuencia(TipoFrecuenciaAhorro frecuencia) {
    this.frecuencia = frecuencia;
    return this;
  }

  /**
   * Get frecuencia
   * @return frecuencia
   **/
  @JsonProperty("frecuencia")
  @ApiModelProperty(value = "")
  public TipoFrecuenciaAhorro getFrecuencia() {
    return frecuencia;
  }

  public void setFrecuencia(TipoFrecuenciaAhorro frecuencia) {
    this.frecuencia = frecuencia;
  }

  public AhorroProgramado envioNotificaciones(Boolean envioNotificaciones) {
    this.envioNotificaciones = envioNotificaciones;
    return this;
  }

  /**
   * Envio de notificaciones
   * @return envioNotificaciones
   **/
  @JsonProperty("envioNotificaciones")
  @ApiModelProperty(value = "Envio de notificaciones")
  public Boolean isEnvioNotificaciones() {
    return envioNotificaciones;
  }

  public void setEnvioNotificaciones(Boolean envioNotificaciones) {
    this.envioNotificaciones = envioNotificaciones;
  }

  public AhorroProgramado saldoPendiente(Double saldoPendiente) {
    this.saldoPendiente = saldoPendiente;
    return this;
  }

  /**
   * Saldo Pendiente
   * @return saldoPendiente
   **/
  @JsonProperty("saldoPendiente")
  @ApiModelProperty(value = "Saldo Pendiente")
  public Double getSaldoPendiente() {
    return saldoPendiente;
  }

  public void setSaldoPendiente(Double saldoPendiente) {
    this.saldoPendiente = saldoPendiente;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AhorroProgramado ahorroProgramado = (AhorroProgramado) o;
    return Objects.equals(this.montoPorAhorrar, ahorroProgramado.montoPorAhorrar) &&
        Objects.equals(this.frecuencia, ahorroProgramado.frecuencia) &&
        Objects.equals(this.envioNotificaciones, ahorroProgramado.envioNotificaciones) &&
        Objects.equals(this.saldoPendiente, ahorroProgramado.saldoPendiente);
  }

  @Override
  public int hashCode() {
    return Objects.hash(montoPorAhorrar, frecuencia, envioNotificaciones, saldoPendiente);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AhorroProgramado {\n");
    
    sb.append("    montoPorAhorrar: ").append(toIndentedString(montoPorAhorrar)).append("\n");
    sb.append("    frecuencia: ").append(toIndentedString(frecuencia)).append("\n");
    sb.append("    envioNotificaciones: ").append(toIndentedString(envioNotificaciones)).append("\n");
    sb.append("    saldoPendiente: ").append(toIndentedString(saldoPendiente)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

