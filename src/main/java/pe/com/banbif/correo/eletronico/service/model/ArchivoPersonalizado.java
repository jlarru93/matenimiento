/*
 * BanBif - API
 * API de BanBif
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package pe.com.banbif.correo.eletronico.service.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Sierve para almacenar las informacionaes de del archivo Personalizado
 */
@ApiModel(description = "Sierve para almacenar las informacionaes de del archivo Personalizado")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2019-04-02T12:18:15.278Z")
public class ArchivoPersonalizado   {
  @JsonProperty("contenidoArchivo")
  private String contenidoArchivo = null;

  @JsonProperty("archivoBase")
  private ArchivoBaseBanbif archivoBase = null;

  @JsonProperty("cliente")
  private Cliente cliente = null;

  @JsonProperty("formatoArchivo")
  private FormatoArchivo formatoArchivo = null;

  @JsonProperty("delimitador")
  private Delimitador delimitador = null;

  @JsonProperty("separador")
  private String separador = null;

  @JsonProperty("camposSecuenciales")
  private List<CampoSecuencialArchivo> camposSecuenciales = null;

  @JsonProperty("camposPosicionales")
  private List<CampoPosicionalArchivo> camposPosicionales = null;

  public ArchivoPersonalizado contenidoArchivo(String contenidoArchivo) {
    this.contenidoArchivo = contenidoArchivo;
    return this;
  }

  /**
   * base64 del archivo que se está enviando para conversión
   * @return contenidoArchivo
   **/
  @JsonProperty("contenidoArchivo")
  @ApiModelProperty(value = "base64 del archivo que se está enviando para conversión")
  public String getContenidoArchivo() {
    return contenidoArchivo;
  }

  public void setContenidoArchivo(String contenidoArchivo) {
    this.contenidoArchivo = contenidoArchivo;
  }

  public ArchivoPersonalizado archivoBase(ArchivoBaseBanbif archivoBase) {
    this.archivoBase = archivoBase;
    return this;
  }

  /**
   * Get archivoBase
   * @return archivoBase
   **/
  @JsonProperty("archivoBase")
  @ApiModelProperty(value = "")
  public ArchivoBaseBanbif getArchivoBase() {
    return archivoBase;
  }

  public void setArchivoBase(ArchivoBaseBanbif archivoBase) {
    this.archivoBase = archivoBase;
  }

  public ArchivoPersonalizado cliente(Cliente cliente) {
    this.cliente = cliente;
    return this;
  }

  /**
   * Get cliente
   * @return cliente
   **/
  @JsonProperty("cliente")
  @ApiModelProperty(value = "")
  public Cliente getCliente() {
    return cliente;
  }

  public void setCliente(Cliente cliente) {
    this.cliente = cliente;
  }

  public ArchivoPersonalizado formatoArchivo(FormatoArchivo formatoArchivo) {
    this.formatoArchivo = formatoArchivo;
    return this;
  }

  /**
   * Get formatoArchivo
   * @return formatoArchivo
   **/
  @JsonProperty("formatoArchivo")
  @ApiModelProperty(value = "")
  public FormatoArchivo getFormatoArchivo() {
    return formatoArchivo;
  }

  public void setFormatoArchivo(FormatoArchivo formatoArchivo) {
    this.formatoArchivo = formatoArchivo;
  }

  public ArchivoPersonalizado delimitador(Delimitador delimitador) {
    this.delimitador = delimitador;
    return this;
  }

  /**
   * Get delimitador
   * @return delimitador
   **/
  @JsonProperty("delimitador")
  @ApiModelProperty(value = "")
  public Delimitador getDelimitador() {
    return delimitador;
  }

  public void setDelimitador(Delimitador delimitador) {
    this.delimitador = delimitador;
  }

  public ArchivoPersonalizado separador(String separador) {
    this.separador = separador;
    return this;
  }

  /**
   * Indica el separador utilizado en el archivo
   * @return separador
   **/
  @JsonProperty("separador")
  @ApiModelProperty(value = "Indica el separador utilizado en el archivo")
  public String getSeparador() {
    return separador;
  }

  public void setSeparador(String separador) {
    this.separador = separador;
  }

  public ArchivoPersonalizado camposSecuenciales(List<CampoSecuencialArchivo> camposSecuenciales) {
    this.camposSecuenciales = camposSecuenciales;
    return this;
  }

  public ArchivoPersonalizado addCamposSecuencialesItem(CampoSecuencialArchivo camposSecuencialesItem) {
    if (this.camposSecuenciales == null) {
      this.camposSecuenciales = new ArrayList<CampoSecuencialArchivo>();
    }
    this.camposSecuenciales.add(camposSecuencialesItem);
    return this;
  }

  /**
   * Campos que pueden o no se rellenan según el tipo de archivo seleccionado
   * @return camposSecuenciales
   **/
  @JsonProperty("camposSecuenciales")
  @ApiModelProperty(value = "Campos que pueden o no se rellenan según el tipo de archivo seleccionado")
  public List<CampoSecuencialArchivo> getCamposSecuenciales() {
    return camposSecuenciales;
  }

  public void setCamposSecuenciales(List<CampoSecuencialArchivo> camposSecuenciales) {
    this.camposSecuenciales = camposSecuenciales;
  }

  public ArchivoPersonalizado camposPosicionales(List<CampoPosicionalArchivo> camposPosicionales) {
    this.camposPosicionales = camposPosicionales;
    return this;
  }

  public ArchivoPersonalizado addCamposPosicionalesItem(CampoPosicionalArchivo camposPosicionalesItem) {
    if (this.camposPosicionales == null) {
      this.camposPosicionales = new ArrayList<CampoPosicionalArchivo>();
    }
    this.camposPosicionales.add(camposPosicionalesItem);
    return this;
  }

  /**
   * Campos que pueden o no se rellenan según el tipo de archivo seleccionado
   * @return camposPosicionales
   **/
  @JsonProperty("camposPosicionales")
  @ApiModelProperty(value = "Campos que pueden o no se rellenan según el tipo de archivo seleccionado")
  public List<CampoPosicionalArchivo> getCamposPosicionales() {
    return camposPosicionales;
  }

  public void setCamposPosicionales(List<CampoPosicionalArchivo> camposPosicionales) {
    this.camposPosicionales = camposPosicionales;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArchivoPersonalizado archivoPersonalizado = (ArchivoPersonalizado) o;
    return Objects.equals(this.contenidoArchivo, archivoPersonalizado.contenidoArchivo) &&
        Objects.equals(this.archivoBase, archivoPersonalizado.archivoBase) &&
        Objects.equals(this.cliente, archivoPersonalizado.cliente) &&
        Objects.equals(this.formatoArchivo, archivoPersonalizado.formatoArchivo) &&
        Objects.equals(this.delimitador, archivoPersonalizado.delimitador) &&
        Objects.equals(this.separador, archivoPersonalizado.separador) &&
        Objects.equals(this.camposSecuenciales, archivoPersonalizado.camposSecuenciales) &&
        Objects.equals(this.camposPosicionales, archivoPersonalizado.camposPosicionales);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contenidoArchivo, archivoBase, cliente, formatoArchivo, delimitador, separador, camposSecuenciales, camposPosicionales);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArchivoPersonalizado {\n");
    
    sb.append("    contenidoArchivo: ").append(toIndentedString(contenidoArchivo)).append("\n");
    sb.append("    archivoBase: ").append(toIndentedString(archivoBase)).append("\n");
    sb.append("    cliente: ").append(toIndentedString(cliente)).append("\n");
    sb.append("    formatoArchivo: ").append(toIndentedString(formatoArchivo)).append("\n");
    sb.append("    delimitador: ").append(toIndentedString(delimitador)).append("\n");
    sb.append("    separador: ").append(toIndentedString(separador)).append("\n");
    sb.append("    camposSecuenciales: ").append(toIndentedString(camposSecuenciales)).append("\n");
    sb.append("    camposPosicionales: ").append(toIndentedString(camposPosicionales)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

